services:
  postgres-idp:
    image: postgres:17
    environment:
      POSTGRES_DB: keycloak
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASS}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - web

  keycloak:
    build: .
    volumes:
      - ./realm.json:/opt/keycloak/data/import/realm-export.json
    environment:
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://postgres-idp:5432/keycloak
      KC_DB_USERNAME: ${DB_USER}
      KC_DB_PASSWORD: ${DB_PASS}
      KC_HOSTNAME: keycloak.ditlab.cloud
      KEYCLOAK_ADMIN: ${KC_ADMIN}
      KEYCLOAK_ADMIN_PASSWORD: ${KC_ADMIN_PASS}
      KC_PROXY_HEADERS: xforwarded
      KC_HTTP_ENABLED: "true"
      KC_HOSTNAME_STRICT: "false"
      KC_HOSTNAME_STRICT_HTTPS: "false"
    depends_on:
      - postgres-idp
    networks:
      - web
    command: start --import-realm
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.keycloak.rule=Host(`keycloak.ditlab.cloud`)"
      - "traefik.http.routers.keycloak.entrypoints=websecure"
      - "traefik.http.routers.keycloak.tls.certresolver=letsencrypt"
      - "traefik.http.routers.keycloak.tls=true"
      - "traefik.http.routers.keycloak-redirect.rule=Host(`keycloak.ditlab.cloud`)"
      - "traefik.http.routers.keycloak-redirect.entrypoints=web"
      - "traefik.http.routers.keycloak-redirect.middlewares=redirect-to-https"
      - "traefik.http.middlewares.redirect-to-https.redirectscheme.scheme=https"
      - "traefik.http.services.keycloak.loadbalancer.server.port=8080"

networks:
  web:
    external: true

volumes:
  postgres_data: